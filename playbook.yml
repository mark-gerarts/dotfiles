- hosts: localhost
  become: yes
  vars:
    - username: 'mark'

  tasks:
    - name: Install system packages
      apt:
        name:
          - bat
          - ca-certificates
          - curl
          - dotnet-sdk-7.0
          - entr
          - flatpak
          - git
          - gnome-software-plugin-flatpak
          - gnome-tweaks
          - gnupg
          - gpg
          - pass
          - ripgrep
          - vim
          - wget
          - wl-clipboard # Pass requirement
        state: latest

    - name: Install docker (workaround until in official repo)
      block:
        - name: Add Docker's GPG key
          shell: |
            install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            chmod a+r /etc/apt/keyrings/docker.gpg
          args:
            creates: /etc/apt/keyrings/docker.gpg

        - name: Set up Docker repository
          shell: |
            echo \
              "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
              tee /etc/apt/sources.list.d/docker.list > /dev/null
          args:
            creates: /etc/apt/sources.list.d/docker.list

        - name: Run apt-get update
          apt: update_cache=yes
          changed_when: false

        - name: Install docker
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: latest

    - name: Add the flathub flatpak repository
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
        method: system

    # Run `flatpak list --app` to see installed apps.
    - name: Install flatpaks
      community.general.flatpak:
        name:
          - com.github.tchx84.Flatseal
          - com.mattjakeman.ExtensionManager
          - com.slack.Slack
          - org.chromium.Chromium
          - org.mozilla.firefox
          - org.gnome.Boxes
          - rest.insomnia.Insomnia

    - name: Check out dotfiles repo
      git:
        repo: git@github.com:mark-gerarts/dotfiles.git
        dest: "/home/{{ username }}/dotfiles"
        accept_hostkey: yes
        key_file: "/home/{{ username }}/.ssh/id_rsa"
      delegate_to: localhost
      become: no

    - name: Create dotfile symlinks
      file:
        src: "/home/{{ username }}/dotfiles/{{ item }}"
        dest: "/home/{{ username }}/{{ item }}"
        state: link
        force: true
      loop:
        - .config/Code/User/settings.json
        - .config/Code/User/keybindings.json
        - .config/bat
        - .ssh/config
        - .scripts
        - .bash_aliases
        - .eslintrc.json
        - .gitconfig
        - .pylintrc
        - .sbclrc
        - .vimrc

    - name: Add user to docker group
      user:
        name: "{{ username }}"
        groups: docker,sudo

    # !! Always check `sudo visudo -c -f <custom sudoers>` before applying
    # changes.
    - name: "Configure sudoers"
      copy:
        src: "/home/{{ username }}/dotfiles/etc/sudoers.d/custom-sudoers"
        dest:  /etc/sudoers.d/custom-sudoers
        owner: root
        group: root
        mode: '0440'

    - name: "Add Apple keyboard config"
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
      loop:
        - src: "/home/{{ username }}/dotfiles/etc/modprobe.d/hid_apple.conf"
          dest: /etc/modprobe.d/hid_apple.conf
        - src: "/home/{{ username }}/dotfiles/etc/udev/hwdb.d/99-apple-magic-keyboard.hwdb"
          dest: /etc/udev/hwdb.d/99-apple-magic-keyboard.hwdb

    - name: Setup Node
      become: no
      block:
        - name: Install nvm
          # Update the version when needed.
          ansible.builtin.shell: >
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.3/install.sh | bash
          args:
            executable: /bin/bash
            chdir: "/home/{{ username }}"
            creates: "/home/{{ username }}/.nvm/nvm.sh"

        - name: Setup .profile
          ansible.builtin.lineinfile:
            path: "/home/{{ username }}/.profile"
            line: source ~/.nvm/nvm.sh
            create: yes

        - name: Install node
          ansible.builtin.shell: |
            . /home/{{ username }}/.nvm/nvm.sh && nvm install --lts
          args:
            executable: /bin/bash
            chdir: "/home/{{ username }}"
            creates: "/home/{{ username }}/.nvm/versions/node"

  roles:
    - role: gantsign.visual-studio-code
      # Use -e skip_vscode=1 to skip vscode. Useful while debugging because it
      # takes a long time to sync extensions.
      when: skip_vscode is not defined
      users:
        - username: "{{ username }}"
          # Run `code --list-extensions | sort` to see installed extensions.
          visual_studio_code_extensions:
            - amazonwebservices.aws-toolkit-vscode
            - DavidAnson.vscode-markdownlint
            - dbaeumer.vscode-eslint
            - Gruntfuggly.todo-tree
            - Ionide.Ionide-fsharp
            - James-Yu.latex-workshop
            - marp-team.marp-vscode
            - ms-azuretools.vscode-azurefunctions
            - ms-azuretools.vscode-azureresourcegroups
            - ms-azuretools.vscode-docker
            - ms-dotnettools.csharp
            - ms-python.isort
            - ms-python.pylint
            - ms-python.python
            - ms-python.vscode-pylance
            - ms-toolsai.jupyter
            - ms-toolsai.jupyter-keymap
            - ms-toolsai.jupyter-renderers
            - ms-toolsai.vscode-jupyter-cell-tags
            - ms-toolsai.vscode-jupyter-slideshow
            - ms-vscode.azure-account
            - stkb.rewrap
            - timonwong.shellcheck
            - tuttieee.emacs-mcx
            - valentjn.vscode-ltex
            - yzhang.markdown-all-in-one
